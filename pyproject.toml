[tool.pytest.ini_options]
addopts = "-rs -v"
log_cli = true

[tool.pyright]
typeCheckingMode = "off"
reportMissingTypeStubs = "error"
include = [
    "opentelemetry-api/src",
    "opentelemetry-sdk/src",
    "opentelemetry-semantic-conventions/src",
    "opentelemetry-python/exporter/opentelemetry-exporter-opencensus/src",
    "opentelemetry-python/exporter/opentelemetry-exporter-otlp/src",
    "opentelemetry-python/exporter/opentelemetry-exporter-otlp-proto-common/src",
    "opentelemetry-python/exporter/opentelemetry-exporter-otlp-proto-grpc/src",
    "opentelemetry-python/exporter/opentelemetry-exporter-otlp-proto-http/src",
    "opentelemetry-python/exporter/opentelemetry-exporter-prometheus/src",
    "opentelemetry-python/exporter/opentelemetry-exporter-zipkin/src",
    "opentelemetry-python/exporter/opentelemetry-exporter-zipkin-json/src",
    "opentelemetry-python/exporter/opentelemetry-exporter-zipkin-proto-http/src",
    "opentelemetry-python/propagator/opentelemetry-propagator-b3/src",
    "opentelemetry-python/propagator/opentelemetry-propagator-jaeger/src",
    "opentelemetry-python/shim/opentelemetry-opencensus-shim/src",
    "opentelemetry-python/shim/opentelemetry-opentracing-shim/src",

]

[tool.ruff]
# https://docs.astral.sh/ruff/configuration/
target-version = "py38"
line-length = 79
extend-exclude = [
  "*_pb2*.py*",
]
output-format = "concise"

[tool.ruff.lint]
# https://docs.astral.sh/ruff/linter/#rule-selection
# pylint: https://github.com/astral-sh/ruff/issues/970
select = [
  "I",   # isort
  "F",   # pyflakes
  "E",   # pycodestyle errors
  "W",   # pycodestyle warnings
  "PLC", # pylint convention
  "PLE", # pylint error
  "Q",   # flake8-quotes
]

ignore = [
  "E501", # line-too-long
]

[tool.ruff.lint.per-file-ignores]
"docs/**/*.*" = ["PLE"]

[tool.ruff.lint.isort]
known-third-party = [
  "psutil",
  "pytest",
  "redis",
  "redis_opentracing",
  "opencensus",
]
known-first-party = ["opentelemetry", "opentelemetry_example_app"]
